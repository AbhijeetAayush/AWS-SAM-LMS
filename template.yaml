AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: Learning Management System Backend
Parameters:
  SupabaseUrl:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /lms-backend/SUPABASE_URL
    Description: Supabase Project URL
    NoEcho: true
  SupabaseKey:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /lms-backend/SUPABASE_KEY
    Description: Supabase Anon Key
    NoEcho: true
  JwtSecret:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /lms-backend/JWT_SECRET
    Description: Supabase JWT Secret
    NoEcho: true
  UpstashRedisUrl:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /lms-backend/UPSTASH_REDIS_URL
    Description: Upstash Redis URL
    NoEcho: true
  GitHubClientId:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /lms-backend/GITHUB_CLIENT_ID
    Description: GitHub OAuth Client ID
    NoEcho: true
  GitHubClientSecret:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /lms-backend/GITHUB_CLIENT_SECRET
    Description: GitHub OAuth Client Secret
    NoEcho: true
  AllowedOrigin:
    Type: String
    Description: CORS allowed origin
    Default: "*"
Resources:
  RestApiRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: InvokeLambdaPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: lambda:InvokeFunction
                Resource:
                  - !GetAtt AuthStack.Outputs.AuthLambdaArn
                  - !GetAtt CoursesStack.Outputs.CoursesLambdaArn
                  - !GetAtt LessonsStack.Outputs.LessonsLambdaArn
                  - !GetAtt QuizzesStack.Outputs.QuizzesLambdaArn
                  - !GetAtt ProgressStack.Outputs.ProgressLambdaArn
  LmsApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: ./api/backend-api.yaml
      Cors:
        AllowMethods: "'GET,POST,OPTIONS'"
        AllowHeaders: "'Content-Type,Authorization'"
        AllowOrigin: !Ref AllowedOrigin
  AuthStack:
    Type: AWS::Serverless::Application
    Properties:
      Location: ./auth-stack/template.yaml
      Parameters:
        SupabaseUrl: !Ref SupabaseUrl
        SupabaseKey: !Ref SupabaseKey
        JwtSecret: !Ref JwtSecret
        GitHubClientId: !Ref GitHubClientId
        GitHubClientSecret: !Ref GitHubClientSecret
        AllowedOrigin: !Ref AllowedOrigin
  CoursesStack:
    Type: AWS::Serverless::Application
    Properties:
      Location: ./courses-stack/template.yaml
      Parameters:
        SupabaseUrl: !Ref SupabaseUrl
        SupabaseKey: !Ref SupabaseKey
        JwtSecret: !Ref JwtSecret
        UpstashRedisUrl: !Ref UpstashRedisUrl
        AllowedOrigin: !Ref AllowedOrigin
  LessonsStack:
    Type: AWS::Serverless::Application
    Properties:
      Location: ./lessons-stack/template.yaml
      Parameters:
        SupabaseUrl: !Ref SupabaseUrl
        SupabaseKey: !Ref SupabaseKey
        JwtSecret: !Ref JwtSecret
        UpstashRedisUrl: !Ref UpstashRedisUrl
        AllowedOrigin: !Ref AllowedOrigin
  QuizzesStack:
    Type: AWS::Serverless::Application
    Properties:
      Location: ./quizzes-stack/template.yaml
      Parameters:
        SupabaseUrl: !Ref SupabaseUrl
        SupabaseKey: !Ref SupabaseKey
        JwtSecret: !Ref JwtSecret
        UpstashRedisUrl: !Ref UpstashRedisUrl
        AllowedOrigin: !Ref AllowedOrigin
  ProgressStack:
    Type: AWS::Serverless::Application
    Properties:
      Location: ./progress-stack/template.yaml
      Parameters:
        SupabaseUrl: !Ref SupabaseUrl
        SupabaseKey: !Ref SupabaseKey
        JwtSecret: !Ref JwtSecret
        UpstashRedisUrl: !Ref UpstashRedisUrl
        AllowedOrigin: !Ref AllowedOrigin
Outputs:
  LmsApi:
    Description: URL of the API Gateway
    Value: !Sub "https://${LmsApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
  AuthLambdaArn:
    Description: ARN of the Auth Lambda Function
    Value: !GetAtt AuthStack.Outputs.AuthLambdaArn
  CoursesLambdaArn:
    Description: ARN of the Courses Lambda Function
    Value: !GetAtt CoursesStack.Outputs.CoursesLambdaArn
  LessonsLambdaArn:
    Description: ARN of the Lessons Lambda Function
    Value: !GetAtt LessonsStack.Outputs.LessonsLambdaArn
  QuizzesLambdaArn:
    Description: ARN of the Quizzes Lambda Function
    Value: !GetAtt QuizzesStack.Outputs.QuizzesLambdaArn
  ProgressLambdaArn:
    Description: ARN of the Progress Lambda Function
    Value: !GetAtt ProgressStack.Outputs.ProgressLambdaArn
